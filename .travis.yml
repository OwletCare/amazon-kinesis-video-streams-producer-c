language: cpp
sudo: true

branches:
  only:
  - master
  - develop

cache:
- directories:
  - $HOME/.cache

addons:
  apt:
    packages:
      - gdb

script:
  - export AWS_KVS_LOG_LEVEL=3
  - make
  - ulimit -c unlimited -S
  - timeout --signal=SIGABRT 150m ./tst/producer_test --gtest_break_on_failure

after_failure:
  - for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb $(pwd)/tst/producer_test core* -ex "thread apply all bt" -ex "set pagination 0" -batch; done;

matrix:
  # MemorySanitizer and UndefinedBehaviorSanitizer are still WIP
  allow_failures:
    - env: allowTestFail=true

  include:

    # MemorySanitizer
    - name: "Linux Clang MemorySanitizer"
      os: linux
      compiler: clang
      env: allowTestFail=true
      before_script: mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE -DMEMORY_SANITIZER=TRUE -DBUILD_COMMON_LWS=TRUE

    # ThreadSanitizer
    - name: "Linux Clang ThreadSanitizer"
      os: linux
      compiler: clang
      env: allowTestFail=true
      before_script: mkdir build && cd build && cmake .. -DBUILD_TEST=TRUE -DTHREAD_SANITIZER=TRUE -DBUILD_COMMON_LWS=TRUE
 
    # Generate Doxygen
    - name: "Generate Doxygen"
      if: type = push
      env: allowTestFail=true
      before_install:
        - docker run -w /src/.github -dit --name alpine -v $(pwd):/src alpine
        - alpine() { docker exec -it alpine "$@"; }
        - alpine apk update
        - alpine apk add doxygen graphviz 
        - alpine apk add --no-cache ttf-freefont
      script:
        # Add SSH key to agent
        - |
            eval "$(ssh-agent -s)"
            openssl aes-256-cbc -K $encrypted_1858eb369f49_key -iv $encrypted_1858eb369f49_iv -in github_deploy_key.enc -out ~\/.ssh/travis_prodc/github_deploy_key -d
            chmod 600 .github/github_deploy_key
            ssh-add .github/github_deploy_key
            rm .github/github_deploy_key
        # Generate doxygen in container, need latest version
        - alpine doxygen Doxyfile
        - alpine chmod -R 777 doc
        - mv .github/doc/html /tmp
        # Unshallow repo
        - |
            git remote rm origin
            git remote add origin git@github.com:awslabs/awslabs/amazon-kinesis-video-streams-producer-c.git
            git fetch
        # Move to gh-pages and create new commit
        - |
            git checkout gh-pages
            rm -rf * .github
            mv /tmp/html/* .
        # Commit and push
        - |
            git add .
            git commit -m "Auto-generated from travis"
            git push
